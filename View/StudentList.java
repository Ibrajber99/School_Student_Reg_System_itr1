/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package View;

import Model.*;
import View.*;
import java.io.File;
import java.util.ArrayList;
import java.util.Set;
import javafx.scene.paint.Color;
import javax.swing.ButtonGroup;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.JSpinner;
import javax.swing.JTable;
import javax.swing.SpinnerNumberModel;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableModel;

/**
 *
 * This the student list form and which a table gets populated with the students info
 * here you can add remove recover new students and also change the profile picture
 */
public class StudentList extends javax.swing.JFrame {

    /**
     * Creates new form StudentList
     */
    enum VIEW {
        Male, Female, CS, Bio, Buiss, Archive, NOT_SELECTED
    }
    VIEW currState = VIEW.NOT_SELECTED;

    @Override
    public synchronized int getState() {
        return super.getState(); //To change body of generated methods, choose Tools | Templates.
    }
    //Variables and objects Delcaration and Intialization
    DataBase db = new DataBase();
    ImageIntializer ig = new ImageIntializer();
    int id = 0;
    int selectedRow = 0;
    String prog = "";
    ButtonGroup bgroup = new ButtonGroup();
    ButtonGroup genderGroup = new ButtonGroup();
    ArrayList<String> adminInfo = new ArrayList<String>();

    public StudentList() {
        initComponents();
        this.setTitle("Student List");
    }

    public StudentList(String userName, String passWord) {
        initComponents();
        setAssets();
        adminInfo.add(userName);
        adminInfo.add(passWord);
        this.setResizable(false);
        this.setTitle("Student List");
       
    }

    public StudentList(String userName, String passWord, String typeL) {
        initComponents();
        adminInfo.add(userName);
        adminInfo.add(passWord);
        this.setResizable(false);
        if (typeL.equals("Male")) {
            this.currState = VIEW.Male;
        } else if (typeL.equals("Female")) {
            this.currState = VIEW.Female;
        } else if (typeL.equals("CS")) {
            this.currState = VIEW.CS;
        } else if (typeL.equals("Bio")) {
            this.currState = VIEW.Bio;
        } else if (typeL.equals("Archive")) {
            this.currState = VIEW.Archive;
        } else {
            this.currState = VIEW.Buiss;
        }
        
        if(this.currState ==VIEW.Archive){
            archiveBtn.setText("Restore Student");
            studentPicBtn.setVisible(false);
            
        }
        this.setTitle("Student List");
        setAssets();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        studentTbl = new javax.swing.JTable();
        fNameLbl = new javax.swing.JLabel();
        lNameLbl = new javax.swing.JLabel();
        DOBLbl = new javax.swing.JLabel();
        femaleBtn = new javax.swing.JRadioButton();
        buissBtn = new javax.swing.JRadioButton();
        gpaLbl = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        maleBtn = new javax.swing.JRadioButton();
        csBtn = new javax.swing.JRadioButton();
        bioBtn = new javax.swing.JRadioButton();
        genderLbl = new javax.swing.JLabel();
        GPATxt = new javax.swing.JTextField();
        fNameTxt = new javax.swing.JTextField();
        lNameTxt = new javax.swing.JTextField();
        DOBTxt = new javax.swing.JTextField();
        studentImgLbl = new javax.swing.JLabel();
        saveBtn = new javax.swing.JButton();
        dahsBoardBtn = new javax.swing.JButton();
        archiveBtn = new javax.swing.JButton();
        addBtn = new javax.swing.JButton();
        studentPicBtn = new javax.swing.JButton();
        backgroundLbl = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        studentTbl.setBackground(new java.awt.Color(255, 204, 204));
        studentTbl.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        studentTbl.setForeground(new java.awt.Color(0, 102, 102));
        studentTbl.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "First Name", "Last Name", "DOB", "Gender", "Program", "GPA", "STUDENT_ID"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Integer.class, java.lang.Integer.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        studentTbl.setIntercellSpacing(new java.awt.Dimension(0, 0));
        studentTbl.setRowHeight(25);
        studentTbl.setSelectionBackground(new java.awt.Color(255, 102, 102));
        studentTbl.setShowVerticalLines(false);
        studentTbl.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                studentTblMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(studentTbl);

        getContentPane().add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(510, 0, 570, 360));

        fNameLbl.setText("First name: ");
        getContentPane().add(fNameLbl, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 60, 70, 30));

        lNameLbl.setText("Last Name: ");
        getContentPane().add(lNameLbl, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 100, 60, 30));

        DOBLbl.setText("DOB: ");
        getContentPane().add(DOBLbl, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 140, 40, 30));

        femaleBtn.setText("Female");
        getContentPane().add(femaleBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 180, -1, -1));

        buissBtn.setText("Bussiness");
        getContentPane().add(buissBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(220, 230, -1, -1));

        gpaLbl.setText("GPA: ");
        getContentPane().add(gpaLbl, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 260, 90, 40));

        jLabel1.setText("Program");
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 220, 70, 40));

        maleBtn.setText("Male");
        getContentPane().add(maleBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 180, -1, -1));

        csBtn.setText("CS");
        getContentPane().add(csBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 230, -1, -1));

        bioBtn.setText("Bio");
        getContentPane().add(bioBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 230, -1, -1));

        genderLbl.setText("Gender");
        getContentPane().add(genderLbl, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 180, 60, 20));
        getContentPane().add(GPATxt, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 270, 150, -1));
        getContentPane().add(fNameTxt, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 60, 150, -1));
        getContentPane().add(lNameTxt, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 100, 150, -1));
        getContentPane().add(DOBTxt, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 140, 150, -1));
        getContentPane().add(studentImgLbl, new org.netbeans.lib.awtextra.AbsoluteConstraints(250, 10, 250, 180));

        saveBtn.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        saveBtn.setText("Save");
        saveBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveBtnActionPerformed(evt);
            }
        });
        getContentPane().add(saveBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 320, 80, 30));

        dahsBoardBtn.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        dahsBoardBtn.setText("Dashboard");
        dahsBoardBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                dahsBoardBtnActionPerformed(evt);
            }
        });
        getContentPane().add(dahsBoardBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(350, 320, 120, 30));

        archiveBtn.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        archiveBtn.setText("Archive student");
        archiveBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                archiveBtnActionPerformed(evt);
            }
        });
        getContentPane().add(archiveBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(320, 240, -1, -1));

        addBtn.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        addBtn.setText("Add Student");
        addBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addBtnActionPerformed(evt);
            }
        });
        getContentPane().add(addBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 320, 140, 30));

        studentPicBtn.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        studentPicBtn.setText("change ");
        studentPicBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                studentPicBtnActionPerformed(evt);
            }
        });
        getContentPane().add(studentPicBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(340, 200, -1, -1));
        getContentPane().add(backgroundLbl, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1080, 360));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void studentTblMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_studentTblMouseClicked
        // TODO add your handling code here:
        reSetAssests();
        selectedRow = studentTbl.getSelectedRow();
        highLightSelectedRow(selectedRow);
        saveBtn.setVisible(true);
        if(this.currState == VIEW.Archive){
          studentPicBtn.setVisible(false);  
        }else{
            studentPicBtn.setVisible(true);
        }
        

    }//GEN-LAST:event_studentTblMouseClicked

    private void saveBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveBtnActionPerformed
        // TODO add your handling code here:

        if (csBtn.isSelected()) {
            prog = "CS";
        } else if (bioBtn.isSelected()) {
            prog = "Bio";
        } else {
            prog = "Buiss";
        }

        db.updateStudentInfo(id, Float.parseFloat(GPATxt.getText()), prog);

        saveBtn.setVisible(false);

        reSetTable();
        reSetAssests();

    }//GEN-LAST:event_saveBtnActionPerformed

    private void dahsBoardBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_dahsBoardBtnActionPerformed
        // TODO add your handling code here:
        new adminHomePage(adminInfo.get(0), adminInfo.get(1)).setVisible(true);
        this.setVisible(false);
    }//GEN-LAST:event_dahsBoardBtnActionPerformed

    private void addBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addBtnActionPerformed
        // TODO add your handling code here:
        new addStudent(adminInfo.get(0), adminInfo.get(1)).setVisible(true);
        this.setVisible(false);
    }//GEN-LAST:event_addBtnActionPerformed

    private void studentPicBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_studentPicBtnActionPerformed
        // TODO add your handling code here:
        String fileName = "";
        JFileChooser chooser = new JFileChooser();
        int status = chooser.showOpenDialog(null);
        if (status == JFileChooser.APPROVE_OPTION) {
            File file = chooser.getSelectedFile();
            if (file == null) {
                return;
            }

            fileName = chooser.getSelectedFile().getName();
        }
        updateStudentPic("images/" + fileName);
        studentPicBtn.setVisible(false);
    }//GEN-LAST:event_studentPicBtnActionPerformed

    private void archiveBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_archiveBtnActionPerformed
        // TODO add your handling code here:
        if(this.currState == VIEW.Archive){
            restoreArchive();
        }
        if (db.archiveStudent(id)) {
            reSetTable();
            reSetAssests();
            JOptionPane.showMessageDialog(null, "Student Has been Archived");
        } else {
            JOptionPane.showMessageDialog(null, "Something went wron with Archiving the Student");
        }

    }//GEN-LAST:event_archiveBtnActionPerformed

    
    /**
     * @param args the command line arguments
     */
    private void reSetAssests() {
        maleBtn.setSelected(false);
        maleBtn.setEnabled(false);

        femaleBtn.setSelected(false);
        femaleBtn.setEnabled(false);

        csBtn.setSelected(false);
        bioBtn.setSelected(false);
        buissBtn.setSelected(false);

        fNameTxt.setText("");
        fNameTxt.setEnabled(false);

        lNameTxt.setText("");
        lNameTxt.setEnabled(false);

        DOBTxt.setText("");

        GPATxt.setText("");
    }

    private void reSetTable() {
        studentTbl.clearSelection();
        DefaultTableModel dm = (DefaultTableModel) studentTbl.getModel();
        dm.setRowCount(0);
        if (currState == VIEW.NOT_SELECTED) {
            db.retrieveStudentInfo(studentTbl);
        } else if (currState == VIEW.Male) {
            db.retrieveStudentInfoMale(studentTbl);
        } else if (currState == VIEW.Female) {
            db.retrieveStudentInfoFemale(studentTbl);
        } else if (currState == VIEW.Bio) {
            db.retrieveStudentInfoBio(studentTbl);
        } else if (currState == VIEW.CS) {
            db.retrieveStudentInfoCS(studentTbl);
        }else if (this.currState == VIEW.Archive) {
            db.retrieveArchivedStudents(studentTbl);
            studentPicBtn.setVisible(false);
        }
        else {
            db.retrieveStudentInfobuiss(studentTbl);
        }

    }
    
    private void restoreArchive(){
        Model.Student c = new Model.Student();
        c.setFirstName(fNameTxt.getText());
        c.setLastName(lNameTxt.getText());
        c.setDOB(DOBTxt.getText());
        if(maleBtn.isSelected()){
            c.setGender("M");
        }else{
            c.setGender("F");
        }
        if(csBtn.isSelected()){
            c.setProgram("CS");
        }else if(bioBtn.isSelected()){
            c.setProgram("Bio");
        }else{
            c.setProgram("Buiss");
        }
        c.setGPA(Float.parseFloat(GPATxt.getText()));
        c.setStudentID(id);
        
        db.retrieveStudent(c);
    }

    private void highLightSelectedRow(int i) {

        TableModel model = studentTbl.getModel();
        fNameTxt.setText(model.getValueAt(i, 0).toString());
        lNameTxt.setText(model.getValueAt(i, 1).toString());
        DOBTxt.setText(model.getValueAt(i, 2).toString());
        GPATxt.setText(model.getValueAt(i, 5).toString());
        String gender = model.getValueAt(i, 3).toString();
        String program = model.getValueAt(i, 4).toString();
        if (gender.charAt(0) == 'M') {
            maleBtn.setSelected(true);
            femaleBtn.setSelected(false);
        } else if (gender.charAt(0) == 'F') {
            femaleBtn.setSelected(true);
            maleBtn.setSelected(false);
        }

        System.out.println(program);
        if (program.charAt(0) == 'C') {
            csBtn.setSelected(true);
            bioBtn.setSelected(false);
            buissBtn.setSelected(false);
        } else if (program.charAt(1) == 'i') {
            bioBtn.setSelected(true);
            buissBtn.setSelected(false);
            csBtn.setSelected(false);
        } else if (program.charAt(1) == 'u') {
            csBtn.setSelected(false);
            bioBtn.setSelected(false);
            buissBtn.setSelected(true);
        }
        String imageID = (model.getValueAt(i, 6)).toString();
        id = Integer.parseInt(imageID);
        ImageIcon studentImg = new ImageIcon(db.studentImageSearch(id));
        studentImgLbl.setIcon(studentImg);

        program = "";
        gender = "";
    }

    private void setAssets() {
        if (this.currState.equals(VIEW.NOT_SELECTED)) {
            db.retrieveStudentInfo(studentTbl);
        } else if (this.currState.equals(VIEW.Male)) {
            db.retrieveStudentInfoMale(studentTbl);
        } else if (this.currState.equals(VIEW.Female)) {
            db.retrieveStudentInfoFemale(studentTbl);
        } else if (this.currState.equals(VIEW.Bio)) {
            db.retrieveStudentInfoBio(studentTbl);
        } else if (this.currState.equals(VIEW.CS)) {
            db.retrieveStudentInfoCS(studentTbl);
        } else if (this.currState == VIEW.Archive) {
            db.retrieveArchivedStudents(studentTbl);
            studentPicBtn.setVisible(false);
        } else {
            db.retrieveStudentInfobuiss(studentTbl);
        }
        
        studentTbl.getTableHeader().setOpaque(false);
        
        
        
        
        ig.setImage("images/adminHomePage.png", backgroundLbl);
        ig.setImage("images/home-run.png", dahsBoardBtn);
        ig.setImage("images/plus.png", addBtn);
        genderGroup.add(femaleBtn);
        genderGroup.add(maleBtn);
        bgroup.add(csBtn);
        bgroup.add(bioBtn);
        bgroup.add(buissBtn);
        saveBtn.setVisible(false);
        studentPicBtn.setVisible(false);
    }

    private void updateStudentPic(String path) {
        if (!path.isEmpty()) {
            db.updateStudentPic(id, path);
        }

    }

    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(StudentList.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(StudentList.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(StudentList.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(StudentList.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new StudentList().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel DOBLbl;
    private javax.swing.JTextField DOBTxt;
    private javax.swing.JTextField GPATxt;
    private javax.swing.JButton addBtn;
    private javax.swing.JButton archiveBtn;
    private javax.swing.JLabel backgroundLbl;
    private javax.swing.JRadioButton bioBtn;
    private javax.swing.JRadioButton buissBtn;
    private javax.swing.JRadioButton csBtn;
    private javax.swing.JButton dahsBoardBtn;
    private javax.swing.JLabel fNameLbl;
    private javax.swing.JTextField fNameTxt;
    private javax.swing.JRadioButton femaleBtn;
    private javax.swing.JLabel genderLbl;
    private javax.swing.JLabel gpaLbl;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lNameLbl;
    private javax.swing.JTextField lNameTxt;
    private javax.swing.JRadioButton maleBtn;
    private javax.swing.JButton saveBtn;
    private javax.swing.JLabel studentImgLbl;
    private javax.swing.JButton studentPicBtn;
    private javax.swing.JTable studentTbl;
    // End of variables declaration//GEN-END:variables
}
